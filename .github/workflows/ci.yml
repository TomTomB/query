name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: true

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: pnpm dlx nx format:check

      - run: pnpm dlx nx affected --target=lint --parallel=3

      - run: pnpm dlx nx affected --target=build --parallel=3

      - run: pnpm dlx nx affected --target=test --parallel=2

      - name: Create and publish versions
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          commit: 'chore: ðŸ¤– update versions'
          publish: pnpm changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: latest
          run_install: true

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: pnpm dlx nx format:check

      - run: pnpm dlx nx affected --target=lint --parallel=3

      - run: pnpm dlx nx affected --target=build --parallel=3

      - run: pnpm dlx nx affected --target=test --parallel=2
